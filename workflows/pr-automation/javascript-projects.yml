name: 'Pull request automation'
on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
jobs:
  add-reviews:
    runs-on: ubuntu-latest
    if: github.actor != 'GigapipeBot'
    name: Add reviewers
    steps:
      - uses: kentaro-m/auto-assign-action@v1.2.1
        with:
          configuration-path: '.github/pr-assigner.yml'
  add-labeler:
    runs-on: ubuntu-latest
    if: github.actor != 'GigapipeBot'
    name: Add labels
    steps:
      - uses: TimonVS/pr-labeler-action@v3.1.0
        with:
          configuration-path: .github/pr-labeler.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  run-tests:
    runs-on: ubuntu-latest
    if: github.actor != 'GigapipeBot'
    name: Report code coverage
    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.2
      - name: Setup node
        uses: actions/setup-node@v3.0.0
        with:
          node-version: '16'
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3.0.2
        with:
          path: ./node_modules
          key: modules-${{ hashFiles('package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci --ignore-scripts
      - name: Run tests
        run: npm run test:ci
      - name: Create Coverage Report for base branch
        run: |
          mv ./coverage/lcov.info ./lcov_head.info
          git fetch
          git checkout origin/${{ github.event.pull_request.base.ref }}
          npm run test:ci
      - name: Post Coverage Report
        uses: romeovs/lcov-reporter-action@v0.3.1
        with:
          lcov-file: './lcov_head.info'
          lcov-base: './coverage/lcov.info'
          github-token: '${{ secrets.GITHUB_TOKEN }}'
          delete-old-comments: true
          title: ':open_umbrella: Code Coverage'
